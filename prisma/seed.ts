import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting database seeding...');

  // Check if admin user already exists
  const existingAdmin = await prisma.user.findUnique({
    where: { email: 'admin@clickup-api.com' },
  });

  if (existingAdmin) {
    console.log('‚úÖ Admin user already exists, skipping seeding');
    return;
  }

  // Create default admin user
  const hashedPassword = await bcrypt.hash('Admin123!', 10);

  const adminUser = await prisma.user.create({
    data: {
      email: 'admin@clickup-api.com',
      passwordHash: hashedPassword,
      role: 'ADMIN',
    },
  });

  console.log('‚úÖ Created admin user:', {
    id: adminUser.id,
    email: adminUser.email,
    role: adminUser.role,
  });

  // Create sample editor user
  const editorPassword = await bcrypt.hash('Editor123!', 10);

  const editorUser = await prisma.user.create({
    data: {
      email: 'editor@clickup-api.com',
      passwordHash: editorPassword,
      role: 'EDITOR',
    },
  });

  console.log('‚úÖ Created editor user:', {
    id: editorUser.id,
    email: editorUser.email,
    role: editorUser.role,
  });

  // Create sample viewer user
  const viewerPassword = await bcrypt.hash('Viewer123!', 10);

  const viewerUser = await prisma.user.create({
    data: {
      email: 'viewer@clickup-api.com',
      passwordHash: viewerPassword,
      role: 'VIEWER',
    },
  });

  console.log('‚úÖ Created viewer user:', {
    id: viewerUser.id,
    email: viewerUser.email,
    role: viewerUser.role,
  });

  console.log('\nüéâ Database seeding completed!');
  console.log('\nüìã Default Users Created:');
  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ Email                       ‚îÇ Password     ‚îÇ Role    ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  console.log('‚îÇ admin@clickup-api.com       ‚îÇ Admin123!    ‚îÇ ADMIN   ‚îÇ');
  console.log('‚îÇ editor@clickup-api.com      ‚îÇ Editor123!   ‚îÇ EDITOR  ‚îÇ');
  console.log('‚îÇ viewer@clickup-api.com      ‚îÇ Viewer123!   ‚îÇ VIEWER  ‚îÇ');
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
  console.log('\nüîê You can now log in with any of these credentials!');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Error during seeding:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
